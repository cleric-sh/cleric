<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:dependabot" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:dependabot" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:npm_and_yarn" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4b29c0b7-c56a-4e1d-8bf9-21e88d561aa1" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/.graphql-let.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/.graphqlrc.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/.prettierrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/Button/Button.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/Button/Button.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/Button/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/DocLink.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/ExitPreviewButton/ExitPreviewButton.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/ExitPreviewButton/ExitPreviewButton.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/ExitPreviewButton/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/Footer.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/Header.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/LanguageSwitcher.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/Layout.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/Navigation.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/SliceZone.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/slices/EmailSignup.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/slices/FullWidthImage.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/slices/HeadlineWithButton.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/slices/InfoWithImage.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/slices/TextInfo.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/components/slices/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/next-env.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/next.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/pages/404.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/pages/[uid].tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/pages/_app.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/pages/api/exit-preview.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/pages/api/preview.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/pages/foo.graphql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/pages/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/prismic-configuration.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/prismic-schema.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/favicon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/check1.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/facebook.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/fr.svg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/full-width-image-background.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/instagram.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/logo.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/top-icon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/twitter.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/public/images/us.svg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/scripts/getSchema.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/_404.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/_base.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/_breakpoints.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/_reset.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/_typography.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/_footer.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/_header.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/_module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/slices/_email-signup.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/slices/_full-width-image.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/slices/_headline-with-button.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/slices/_info-with-image.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/components/slices/_text-info.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/styles/main.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/types.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/utils/getPrismicClient.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/utils/hooks/useUpdatePreviewRef.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/utils/hooks/useUpdateToolbarDocs.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/utils/prismicHelpers.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/utils/prismicToolbarQueries.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/utils/queries.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gold/next-ts-prismic-graphql-i8n/yarn.lock" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/.env.tpl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/contexts/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/contexts/DEV/ONE.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/contexts/DEV/TWO.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/contexts/ONE.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/contexts/PROD/ONE.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/contexts/PROD/TWO.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/example/index.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/index.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/circleci-context-sync/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/common/src/object/allPropertiesOf.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/common/src/object/declaredPropertiesOf.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/common/src/object/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/common/src/object/isSettable.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/common/src/object/ownPropertiesOf.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/configure.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/decorators/AwsSecretKey.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/decorators/Block.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/decorators/Deprecated.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/decorators/Sensitive.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/decorators/Use.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/errors/ConfigurationError.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/errors/MissingSourceError.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/applyBlocks.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/applyUses.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/ensureNoMissingSources.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/getChildSourcePaths.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/getSource.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/getSourcePaths.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/getUseSourceKeys.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/populate.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/populateObjectFromSources.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/pushPathToCursor.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/readValueFromSources.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/populate/removeSourcesFromCursor.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/select.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/sources/AwsSecretSource.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/sources/ConfigFileSource.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/sources/ProcessEnvSource.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/sources/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/formatEnvKey.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/guards/isConstructor.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/allPropertiesOf.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/declaredPropertiesOf.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/isDeclared.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/isGettable.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/isSettable.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/isValueObject.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/properties/ownPropertiesOf.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/readJsonConfigFile.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/reflect/getMetadata.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/reflect/pushMetadata.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/configuration/utils/splitCamelCase.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/default/Environment.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/default/Platform.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/default/Root.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/default/ServiceUrls.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/default/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/__snapshots__/getConfig.spec.ts.snap" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/__snapshots__/index.spec.ts.snap" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/_tools/TestSource.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/_tools/createJsonFile.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/_tools/expectDecorator.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/_tools/ts-toolbelt/Test.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/_tools/ts-toolbelt/Test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/decorators/AwsSecretKey.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/decorators/Deprecated.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/decorators/Use.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/populate/__snapshots__/readValueFromSources.spec.ts.snap" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/populate/getChildSourceCursor.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/populate/index.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/populate/pushPathToCursor.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/populate/readValueFromSources.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/populate/removeSourceFromCursor.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/select.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/sources/AwsSecretSource.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/sources/ConfigFileSource.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/sources/ProcessEnvSource.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/sources/getSourcePaths.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/utils/formatEnvKey.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/utils/reflect/getMetadata.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/utils/reflect/pushMetadata.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/configuration/utils/splitCamelCase.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/test/getConfig.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/config/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/.vars.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/docker/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/docker/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/docker/nginx.conf.tpl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/docker/scripts/create_tunnels.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/docker/scripts/entrypoint.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/env.tpl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/etc_hosts.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/example/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/example/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/example/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/example/tunnels.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/start.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/libs/ssh-tunnel-server/tunnels.json.tpl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/algorithms/hashing.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bash/args.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bash/conditionals.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bash/jq/array_iteration.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/_explanations/output_directories.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/_explanations/sandboxing.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/_how-to/emit-files-to-repo-from-bazel-build.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/_how-to/run-bazel-in-docker-locally.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/_how-to/write-bazel-rules.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/how-to.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/notes.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/on-frontend-and-bazel.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/problems.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/reference.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_explanations/container_images_have_date_1970.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_explanations/node_linker.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_how-to/build_from_a_dockerfile.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_how-to/build_image_with_run_commands.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_how-to/install_with_apt_get_in_container_image.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_how-to/pull_image_from_docker_hub.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_how-to/sh_into_a_bazel_built_container.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/bazel/rules_docker/_problems/unable_to_extract_manifest_json.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/csharp/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/dotnet/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/environment/_keymap.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/git/git-ignore.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/git/squash-entire-history.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/ide/intellij/plugins.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/kotlin/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/ssh/bind-cannot-assign-requested-address.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/ssh/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/ssl/index.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/typescript/language/src/tuples/in_mapped_types.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/typescript/language/src/tuples/infer_string_literals_in_tuple_instead_of_string.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/typescript/language/src/tuples/infer_tuple_as_function_args_instead_of_array.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sanity/typescript/packages/interesting.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/.fns.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/gh-template.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/.husky/post-checkout" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/.husky/post-merge" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/.husky/pre-push" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/branch/ensure.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/branch/get-default.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/branch/get.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/branch/set.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/branch/unset.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/commit.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/for-each.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/for-one.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/pull.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/submodules/products/push.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/.fns.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/.vars.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/add.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/init.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/ls.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/pull.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/push.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/subtrees/rm.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/libs/store-experimental/src/config/getConfig.ts" beforeDir="false" afterPath="$PROJECT_DIR$/libs/store-experimental/src/config/getConfig.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sanity/typescript/language/src/tuples.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sanity/typescript/packages/io-ts/src/inheritence/index.md" beforeDir="false" afterPath="$PROJECT_DIR$/sanity/typescript/packages/io-ts/src/inheritence/index.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/meta/nodemon.fuse.json" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/meta/nodemon.generate.json" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="docker-desktop" />
    <option name="namespace" value="default" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1j8uiqg8Srghe9C015Ak2MiXqbn" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Applications/WebStorm.app/Contents/plugins/JavaScriptLanguage/jsLanguageServicesImpl/external&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/scripts" />
      <recent name="$PROJECT_DIR$/scripts/submodules" />
      <recent name="$PROJECT_DIR$/libs/common/src/object" />
      <recent name="$PROJECT_DIR$/sanity/typescript/language/src/tuples" />
      <recent name="$PROJECT_DIR$/libs/ssh-tunnel-server" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/sanity/typescript/language/src/tuples" />
      <recent name="$PROJECT_DIR$/libs/ssh-tunnel-server" />
      <recent name="$PROJECT_DIR$/libs/config" />
      <recent name="$PROJECT_DIR$/ops/admin/organization/src" />
      <recent name="$PROJECT_DIR$/ops/admin/root/src" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="Wallabyjs" type="wallaby" factoryName="Wallaby.js" configType="Automatic" configFolder="$PROJECT_DIR$" wsl="No">
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4b29c0b7-c56a-4e1d-8bf9-21e88d561aa1" name="Default Changelist" comment="" />
      <created>1603198171071</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1603198171071</updated>
      <workItem from="1603198172803" duration="1832000" />
      <workItem from="1603200457643" duration="400000" />
      <workItem from="1603204189112" duration="44000" />
      <workItem from="1603204243386" duration="6877000" />
      <workItem from="1603409053010" duration="5624000" />
      <workItem from="1603550087511" duration="37305000" />
      <workItem from="1604506890915" duration="986000" />
      <workItem from="1604517140012" duration="1757000" />
      <workItem from="1609752582281" duration="3015000" />
      <workItem from="1610140250087" duration="4782000" />
      <workItem from="1610218226137" duration="1638000" />
      <workItem from="1610708980195" duration="1454000" />
      <workItem from="1610968261439" duration="4228000" />
      <workItem from="1611165651444" duration="598000" />
      <workItem from="1611174816488" duration="17797000" />
      <workItem from="1612176430537" duration="2608000" />
      <workItem from="1612527074013" duration="597000" />
      <workItem from="1612532391240" duration="599000" />
      <workItem from="1613470520377" duration="1211000" />
      <workItem from="1616145192895" duration="1529000" />
      <workItem from="1616261212132" duration="7856000" />
      <workItem from="1616343610562" duration="1138000" />
      <workItem from="1616345677991" duration="5225000" />
      <workItem from="1616528230888" duration="5176000" />
      <workItem from="1618822027626" duration="5913000" />
      <workItem from="1618990719248" duration="6010000" />
      <workItem from="1619431893786" duration="505000" />
      <workItem from="1620054053280" duration="2069000" />
      <workItem from="1620192494002" duration="3723000" />
      <workItem from="1620409357007" duration="1146000" />
      <workItem from="1621325512654" duration="1522000" />
      <workItem from="1621421416143" duration="598000" />
      <workItem from="1621540011766" duration="994000" />
      <workItem from="1623834568901" duration="613000" />
      <workItem from="1623919403300" duration="599000" />
      <workItem from="1624257736908" duration="1067000" />
      <workItem from="1630660375897" duration="1392000" />
      <workItem from="1630675902500" duration="217000" />
      <workItem from="1630910329632" duration="902000" />
      <workItem from="1631033656252" duration="815000" />
      <workItem from="1631904231540" duration="1096000" />
      <workItem from="1638368562818" duration="1891000" />
      <workItem from="1638386501553" duration="98000" />
      <workItem from="1647437636323" duration="5308000" />
      <workItem from="1647785928600" duration="14000" />
      <workItem from="1647853811158" duration="4308000" />
      <workItem from="1648462124506" duration="4209000" />
      <workItem from="1649760045311" duration="610000" />
      <workItem from="1649767626743" duration="422000" />
      <workItem from="1649770356633" duration="16000" />
      <workItem from="1650279832429" duration="1007000" />
      <workItem from="1650282592124" duration="6446000" />
      <workItem from="1650306277025" duration="54000" />
      <workItem from="1652169460732" duration="28000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>